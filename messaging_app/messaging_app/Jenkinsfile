pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'emmaebi/messaging_app-web:latest'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm: [
                    $class: 'GitSCM',
                    branches: [[name: '*/main']],
                    userRemoteConfigs: [[
                        url: 'https://github.com/Emmanuel-Ebiwari/alx-backend-python.git',
                        credentialsId: 'github-credential'
                    ]]
                ]
                sh 'git branch'
            }
        }

        stage('Setup Python') {
            steps {
                sh '''
                cd messaging_app
                python3 -m venv venv
                . venv/bin/activate
                pip install -r messaging_app/requirements.txt
                '''
            }
        }

        stage('Run Tests') {
            steps {
                sh '''
                cd messaging_app
                . venv/bin/activate
                pytest chat/tests --junitxml=report.xml
                '''
            }
        }

        stage('Build Docker Image') {
            steps {
                sh '''
                cd messaging_app
                docker build -t $DOCKER_IMAGE .
                '''
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                    echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                    docker push $DOCKER_IMAGE
                    '''
                }
            }
        }

        stage('Publish Report') {
            steps {
                echo 'Preparing test report...'
            }
            post {
                always {
                    junit 'messaging_app/report.xml'
                }
            }
        }
    }
}
